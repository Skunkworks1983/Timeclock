/*
 * This file is generated by jOOQ.
 */
package io.github.skunkworks1983.timeclock.db.generated.tables.records;


import io.github.skunkworks1983.timeclock.db.generated.tables.Membertransactions;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembertransactionsRecord extends UpdatableRecordImpl<MembertransactionsRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>MemberTransactions.time</code>.
     */
    public void setTime(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>MemberTransactions.time</code>.
     */
    public Long getTime() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MemberTransactions.tableName</code>.
     */
    public void setTablename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>MemberTransactions.tableName</code>.
     */
    public String getTablename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>MemberTransactions.id</code>.
     */
    public void setId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>MemberTransactions.id</code>.
     */
    public String getId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Membertransactions.MEMBERTRANSACTIONS.TIME;
    }

    @Override
    public Field<String> field2() {
        return Membertransactions.MEMBERTRANSACTIONS.TABLENAME;
    }

    @Override
    public Field<String> field3() {
        return Membertransactions.MEMBERTRANSACTIONS.ID;
    }

    @Override
    public Long component1() {
        return getTime();
    }

    @Override
    public String component2() {
        return getTablename();
    }

    @Override
    public String component3() {
        return getId();
    }

    @Override
    public Long value1() {
        return getTime();
    }

    @Override
    public String value2() {
        return getTablename();
    }

    @Override
    public String value3() {
        return getId();
    }

    @Override
    public MembertransactionsRecord value1(Long value) {
        setTime(value);
        return this;
    }

    @Override
    public MembertransactionsRecord value2(String value) {
        setTablename(value);
        return this;
    }

    @Override
    public MembertransactionsRecord value3(String value) {
        setId(value);
        return this;
    }

    @Override
    public MembertransactionsRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MembertransactionsRecord
     */
    public MembertransactionsRecord() {
        super(Membertransactions.MEMBERTRANSACTIONS);
    }

    /**
     * Create a detached, initialised MembertransactionsRecord
     */
    public MembertransactionsRecord(Long time, String tablename, String id) {
        super(Membertransactions.MEMBERTRANSACTIONS);

        setTime(time);
        setTablename(tablename);
        setId(id);
    }
}
